#ifndef ENGINE_OPENING_BOOK
#define ENGINE_OPENING_BOOK

#include "chess/internal/move.hpp"
#include <chess/internal/constants.hpp>
#include <cstdint>
#include <optional>
#include <unordered_map>

namespace Chess::Engine::OpeningBook {
namespace {
std::unordered_map<U64, uint32_t> openingBook{
    {17452561997100841940LLU,86112},
    {11882663257063329900LLU,168720},
    {3618040503575346412LLU,193504},
    {16875886840023513907LLU,152401},
    {17460865509190600788LLU,193392},
    {8232479699274397092LLU,185168},
    {9102080696945379367LLU,172944},
    {2575963308940264874LLU,168720},
    {16584417687739951215LLU,189280},
    {13993386265909885466LLU,135953},
    {17438699353805767188LLU,189280},
    {17450134275353306932LLU,193392},
    {9678486009539650635LLU,135953},
    {5848852151959389992LLU,189280},
    {10534166554305722440LLU,181056},
    {3398864693124308019LLU,172832},
    {12971077121284014637LLU,160625},
    {8123193377207291067LLU,189280},
    {1942699071371363563LLU,193504},
    {2934949494393932993LLU,193392},
    {5188849501206656027LLU,168720},
};
}

std::optional<Chess::Move> GetMove(U64 hash) {
    if (openingBook.contains(hash))
        return (Chess::Move) openingBook.at(hash);
    return {};
}
}

#endif
